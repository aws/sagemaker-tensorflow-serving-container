ARG TFS_VERSION
ARG CUDA_VERSION_IMAGE

FROM tensorflow/serving:${TFS_VERSION}-gpu as tfs
FROM nvidia/cuda:${CUDA_VERSION_IMAGE}-base-ubuntu16.04
LABEL com.amazonaws.sagemaker.capabilities.accept-bind-to-port=true

ARG CUDA_VERSION_PACKAGES
ARG CUDA_VERSION_DASH
ARG NCCL_VERSION
ARG CUDNN_VERSION
ARG TF_TENSORRT_VERSION
ARG LIBNVINFER_TF_TENSORRT_VERSION
ARG LIBNVINFER_VERSION

COPY --from=tfs /usr/bin/tensorflow_model_server /usr/bin/tensorflow_model_server

# https://github.com/tensorflow/serving/blob/1.12.0/tensorflow_serving/tools/docker/Dockerfile.gpu

RUN \
    apt-get update && apt-get install -y --no-install-recommends \
        ca-certificates \
        cuda-command-line-tools-${CUDA_VERSION_DASH} \
        cuda-command-line-tools-${CUDA_VERSION_DASH} \
        cuda-cublas-${CUDA_VERSION_DASH} \
        cuda-cufft-${CUDA_VERSION_DASH} \
        cuda-curand-${CUDA_VERSION_DASH} \
        cuda-cusolver-${CUDA_VERSION_DASH} \
        cuda-cusparse-${CUDA_VERSION_DASH} \
        libcudnn7=${CUDNN_VERSION}-1+cuda${CUDA_VERSION_PACKAGES} \
        libnccl2=${NCCL_VERSION}-1+cuda${CUDA_VERSION_PACKAGES} \
        libgomp1 && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# The 'apt-get install' of nvinfer-runtime-trt-repo-ubuntu1604-${TF_TENSORRT_VERSION}-ga-cuda${CUDA_VERSION_PACKAGES}
# adds a new list which contains libnvinfer library, so it needs another
# 'apt-get update' to retrieve that list before it can actually install the
# library.
# We don't install libnvinfer-dev since we don't need to build against TensorRT,
# and libnvinfer4 doesn't contain libnvinfer.a static library.
RUN apt-get update && \
    apt-get install --no-install-recommends \
        nvinfer-runtime-trt-repo-ubuntu1604-${TF_TENSORRT_VERSION}-ga-cuda${CUDA_VERSION_PACKAGES} && \
    apt-get update && \
    apt-get install --no-install-recommends \
        libnvinfer${LIBNVINFER_VERSION}=${LIBNVINFER_TF_TENSORRT_VERSION}-1+cuda${CUDA_VERSION_PACKAGES} && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    rm /usr/lib/x86_64-linux-gnu/libnvinfer_plugin* && \
    rm /usr/lib/x86_64-linux-gnu/libnvcaffe_parser* && \
    rm /usr/lib/x86_64-linux-gnu/libnvparsers*

# nginx + njs
RUN \
    apt-get update && \
    apt-get -y install --no-install-recommends curl && \
    curl -s http://nginx.org/keys/nginx_signing.key | apt-key add - && \
    echo 'deb http://nginx.org/packages/ubuntu/ xenial nginx' >> /etc/apt/sources.list && \
    apt-get update && \
    apt-get -y install --no-install-recommends nginx nginx-module-njs python3 python3-pip && \
    apt-get clean

COPY ./ /
ENV NVIDIA_REQUIRE_CUDA "cuda>=${CUDA_VERSION_PACKAGES} brand=tesla,driver>=410,driver<412"

ARG TFS_SHORT_VERSION
ENV SAGEMAKER_TFS_VERSION "${TFS_SHORT_VERSION}"
ENV PATH "$PATH:/sagemaker"
